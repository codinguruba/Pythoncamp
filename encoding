

def encode(s):

    if type(s)!= str:
        return None
        
    encoding_table = str.maketrans({
        'i': '1', 'I': '1',
        'e': '3', 'E': '3',
        'a': '4', 'A': '4',
        'o': '0', 'O': '0'
    })

    return s.translate(encoding_table)
    
    
    
def has_same_encoding(a, b):
   
    if  type(a) != str or type(b) != str:
        return None
        
   
    encoded_a = encode(a)
    encoded_b = encode(b)

    return encoded_a == encoded_b


def count_daynight_pairs(temps):
   
    if len(temps) % 2 != 0:
        return None

    c = 0
    
    for i in range(0, len(temps), 2):
        if temps[i] >= temps[i + 1]:
            c += 1
    
    return c


def classify_temperatures(coldest, hottest, temps):
   
    if coldest > hottest:
        return f"Warning: {coldest} is greater than {hottest}."
    
 
    colder_count = 0
    hotter_count = 0
    normal_count = 0
    
    for temp in temps:
        if temp < coldest:
            colder_count += 1
        elif temp > hottest:
            hotter_count += 1
        else:
            normal_count += 1
    

    return f"{colder_count} days were colder than {coldest}, {hotter_count} days were hotter than {hottest}, and {normal_count} days were normal.



    
